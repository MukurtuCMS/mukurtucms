diff --git a/php-soundcloud/Services/Soundcloud.php b/php-soundcloud/Services/Soundcloud.php
index f85bdfe..c268ba5 100755
--- a/php-soundcloud/Services/Soundcloud.php
+++ b/php-soundcloud/Services/Soundcloud.php
@@ -331,6 +331,32 @@ class Services_Soundcloud
         return $this->_getAccessToken($postData, $curlOptions);
     }
 
+    /**
+     * Retrieve access token using grant type client credentials
+     *
+     * @param string $code        Optional OAuth code returned from the service provider
+     * @param array  $postData    Optional post data
+     * @param array  $curlOptions Optional cURL options
+     *
+     * @return mixed
+     *
+     * @access public
+     * @see Soundcloud::_getAccessToken()
+     */
+    function accessTokenCC($code = null, $postData = array(), $curlOptions = array())
+    {
+        $defaultPostData = array(
+            'code' => $code,
+            'client_id' => $this->_clientId,
+            'client_secret' => $this->_clientSecret,
+            'redirect_uri' => $this->_redirectUri,
+            'grant_type' => 'client_credentials'
+        );
+        $postData = array_filter(array_merge($defaultPostData, $postData));
+
+        return $this->_getAccessToken($postData, $curlOptions);
+    }
+
     /**
      * Refresh access token
      *
diff --git a/scald_soundcloud.module b/scald_soundcloud.module
index 3553b17..3f43f2d 100644
--- a/scald_soundcloud.module
+++ b/scald_soundcloud.module
@@ -10,7 +10,70 @@
 define('SOUNDCLOUD_ID_REGEXP',        '/^[a-zA-Z0-9]+$/');
 define('SOUNDCLOUD_WEB_REGEXP',       '#^https?://([-\w]+\.)?soundcloud\.com/(.+$)#');
 define('SOUNDCLOUD_WEB',              'http://soundcloud.com');
-define('SCALD_APP_CLIENT_ID',         '4ddcde86e34b0c95e0d6222dd1edd38f');
+
+/**
+ * Implements hook_menu().
+ */
+function scald_soundcloud_menu() {
+  $items = array();
+
+  $items['admin/config/media/scald_soundcloud'] = array(
+    'title' => 'Scald: Soundcloud Settings',
+    'type' => MENU_NORMAL_ITEM,
+    'page callback' => 'drupal_get_form',
+    'page arguments' => array('scald_soundcloud_settings_form'),
+    'access arguments' => array('administer scald soundcloud settings'),
+    'description' => 'Configure default settings for Souncloud Scald API',
+  );
+
+  $items['admin/config/media/scald_soundcloud/settings'] = array(
+    'title' => 'Scald: Soundcloud Settings',
+    'type' => MENU_DEFAULT_LOCAL_TASK,
+    'weight' => -1,
+  );
+
+  return $items;
+}
+
+/**
+ * Defines Soundcloud settings form.
+ */
+function scald_soundcloud_settings_form() {
+  $form = array();
+
+  $form['scald_soundcloud_authentication'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Soundcloud API Authentication Settings'),
+  );
+
+  $form['scald_soundcloud_authentication']['scald_soundcloud_client_id'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Soundcloud App Client ID'),
+    '#default_value' => variable_get('scald_soundcloud_client_id', ''),
+    '#required' => TRUE,
+  );
+
+  $form['scald_soundcloud_authentication']['scald_soundcloud_client_secret'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Soundcloud App Client Secret'),
+    '#default_value' => variable_get('scald_soundcloud_client_secret', ''),
+    '#required' => TRUE,
+  );
+
+  return system_settings_form($form);
+}
+
+/**
+ * Implements hook_permission().
+ */
+function scald_soundcloud_permission() {
+  return array(
+    'administer scald soundcloud settings' => array(
+      'title' => t('Administer ScalD Soundcloud settings'),
+      'description' => t('Set API app client id and secret.'),
+    ),
+  );
+}
 
 /**
  * Implements hook_scald_atom_providers().
@@ -31,7 +94,7 @@ function scald_soundcloud_scald_atom_providers() {
 function scald_soundcloud_scald_add_form(&$form, &$form_state) {
   $form['identifier'] = array(
     '#type' => 'textfield',
-    '#title' => t('SoundCloud track identifier or track/set URL'),
+    '#title' => t('SoundCloud URL'),
     '#element_validate' => array('scald_soundcloud_validate_id'),
     '#default_value' => '',
   );
@@ -151,10 +214,7 @@ function scald_soundcloud_theme() {
  *   Object containing all necessary info.
  */
 function scald_soundcloud_audio($id) {
-
-  // create a client object with your app credentials
-  require_once drupal_get_path('module', 'scald_soundcloud') . '/php-soundcloud/Services/Soundcloud.php';
-  $client = new Services_Soundcloud(SCALD_APP_CLIENT_ID, NULL);
+  global $client;
 
   try {
     // Fetch data for a track or playlist
@@ -259,6 +319,61 @@ function scald_soundcloud_parse_id($string, $check) {
 }
 
 
+/**
+ * Check is token is set and is still valid
+ */
+function scald_soundcloud_token_check($timestamp) {
+  $diff = time() - $timestamp;
+  if ($diff < 3600) {
+    return TRUE;
+  }
+  else{
+    return FALSE;
+  }
+}
+
+/**
+ * Logic to create soundcloud object with credentials and token
+ * Token is stored into database and it is refreshed if expired 
+ * This avoids reaching the api limit
+ */
+function scald_create_soundcloud_object() {
+  global $client;
+  
+  // Check if there is a Souncloud client object.
+  if (!isset($client)) {
+    require_once drupal_get_path('module', 'scald_soundcloud') . '/php-soundcloud/Services/Soundcloud.php';
+    $SCALD_APP_CLIENT_ID  = variable_get(scald_soundcloud_client_id);
+    $SCALD_APP_CLIENT_SECRET = variable_get(scald_soundcloud_client_secret);
+
+    $client = new Services_Soundcloud($SCALD_APP_CLIENT_ID, $SCALD_APP_CLIENT_SECRET, NULL);
+    $stored_token = variable_get('soundcloud_token');
+    if (isset($stored_token['access_token'])) {
+      $client->setAccessToken($stored_token['access_token']);
+    }
+  }
+
+  // Get initial token using grant client_credentials and store into db.
+  if (!$client->getAccessToken()) {
+    $token = $client->accessTokenCC();
+    $now = time();
+    $token['timestamp'] = $now;
+    variable_set('soundcloud_token', $token);
+    $stored_token = variable_get('soundcloud_token');
+  }
+  
+  // Check if token needs to be refreshed.
+  $stored_token = variable_get('soundcloud_token');
+  $valid_token = scald_soundcloud_token_check($stored_token['timestamp']);
+  if (!$valid_token) {
+    $refresh_token = $stored_token['refresh_token'];   
+    $token = $client->accessTokenRefresh($refresh_token);
+    $now = time();
+    $token['timestamp'] = $now;
+    variable_set('soundcloud_token', $token);
+  }
+}
+
 /**
  * Resolve a SoundCloud ID from a track URL
  * @param $track_url
@@ -269,8 +384,9 @@ function scald_soundcloud_parse_id($string, $check) {
  *   SoundCloud ID
  */
 function scald_soundcloud_resolve_url($track_url) {
-  require_once drupal_get_path('module', 'scald_soundcloud') . '/php-soundcloud/Services/Soundcloud.php';
-  $client = new Services_Soundcloud(SCALD_APP_CLIENT_ID, NULL);
+  global $client;
+  scald_create_soundcloud_object();
+
   try {
     $resolve = json_decode($client->get('resolve', array('url' => $track_url)));
   }
