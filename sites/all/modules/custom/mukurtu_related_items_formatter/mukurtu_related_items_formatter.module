<?php
/**
 * @file
 * Define Mukurtu specific field formatters
 *
 */

/**
 * Implements hook_field_formatter_info().
 */
function mukurtu_related_items_formatter_field_formatter_info() {
  return [
    'mukurtu_related_items_formatter' => [
      'label' => t('Mukurtu Paged Related Items'),
      'field types' => ['entityreference'],
      'settings' => [
        'items_per_page' => '5',
      ],
    ],
  ];
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function mukurtu_related_items_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = [];
  $element['items_per_page'] = [
    '#type' => 'textfield',
    '#title' => t('Items per page'),
    '#description' => t('Items per page'),
    '#default_value' => $settings['items_per_page'],
    '#element_validate' => ['element_validate_integer_positive'],
  ];
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function mukurtu_related_items_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('Display related items using a pager, with @items per page.', [
    '@items' => $settings['items_per_page'],
  ]);
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function mukurtu_related_items_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = [];
  $output = '';
  $settings = $display['settings'];
  $items_per_page = $settings['items_per_page'];

  $options = [
    'html' => TRUE,
    'attributes' => [
      'title' => $instance['label'],
    ],
  ];

  if (!empty($entity->{$field['field_name']})) {
    // Remove the nodes the user doesn't have access to
    $all_paged_nodes = [];
    foreach ($entity->{$field['field_name']}[LANGUAGE_NONE] as $related_item) {
      $column = key($field['columns']);
      $related_item_node = node_load($related_item[$column]);
      if ($related_item_node && $related_item_node->status && node_access('view', $related_item_node)) {
        $all_paged_nodes[] = $related_item_node;
      }
    }

    $total_item_count = count($all_paged_nodes);
    $is_community_record = FALSE;

    // Right now the default pager only supports a single pager per page. This can be a problem for
    // community records, because there are likely multiple records on a page. Until we can write a
    // custom pager, we will display all related items on community records.
    if (isset($entity->field_community_record_parent) && !empty($entity->field_community_record_parent[LANGUAGE_NONE])) {
      $current_page = 0;
      $page_limit = $total_item_count;
      $is_community_record = TRUE;
      $i = 0;
    }
    else {
      // Total number of referenced entities
      $current_page = pager_default_initialize($total_item_count, $items_per_page);
      $i = $current_page * $items_per_page;
      $page_limit = $i + $items_per_page;
    }

    // Render each related item
    $item_count = 0;
    while (isset($all_paged_nodes[$i]) && $item_count < $items_per_page) {
      $related_item_node_view = node_view($all_paged_nodes[$i++], 'search_result');
      $render = drupal_render($related_item_node_view);
      $output .= $render;
      $item_count++;
    }

    // Print the pager controls, if it isn't a community record
    if (!$is_community_record) {
      $output .= theme('pager', ['quantity', $items_per_page]);
    }
  }

  if ($output != '') {
    $element[0]['#markup'] = $output;
  }

  return $element;
}
